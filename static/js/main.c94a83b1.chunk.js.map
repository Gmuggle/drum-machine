{"version":3,"sources":["yisell_sound_2008030716560441118_88011.mp3","App.js","serviceWorker.js","index.js"],"names":["module","exports","PAD","padKey","padSrc","soundClip","padText","padDescribe","SingleBtn","props","drumPadHandle","bind","pressKey","this","powerState","sound","document","getElementById","volume","currentTime","play","setDisplay","event","key","addEventListener","removeEventListener","id","className","onClick","src","React","Component","DrumPad","pad","PowerBtn","btn","VolumeControl","handleChange","Display","text","App","state","volumeSet","show","volumeChange","powerControl","amountProp","target","parentNode","getBoundingClientRect","length","right","left","setState","style","amountVolume","clientX","firstChild","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c94a83b1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/yisell_sound_2008030716560441118_88011.cf48bcdb.mp3\";","import React from 'react';\n//import logo from './logo.svg';\nimport './App.css';\n//import { thisExpression } from '@babel/types';\nimport soundClip from './yisell_sound_2008030716560441118_88011.mp3'\n\n\n//LAYOUT\nconst APP_LAYOUT = \"well col-xs-10 col-xs-offset-1 col-md-8 col-md-offset-2 row App\";\nconst PAD_LAYOUT = \"row well col-xs-10 col-xs-offset-1 col-md-5 col-md-offset-1 col-lg-5 col-lg-offset-1\";\nconst CONTROL_LAYOUT = \"well row col-xs-10 col-xs-offset-1 col-md-4 col-md-offset-1 col-md-offset-1 col-lg-4 col-lg-offset-1\";\nconst SINGLEBTN_LAYOUT = \"col-xs-4 col-md-4\";\nconst POWER_LAYOUT = \"row col-xs-10 col-xs-offset-1 col-md-4 col-md-offset-4\";\nconst POWER_LOGO = \"col-xs-12 col-md-12\";\nconst POWER_BTN = \"col-xs-12 col-md-12\";\nconst VOLUME_LAYOUT = \"col-xs-12 col-md-12\";\nconst DISPLAY_LAYOUT = \"col-xs-10 col-xs-offset-1 col-md-8 col-md-offset-2\";\n\n//准备好电子鼓的按钮，确定对应的键盘按键、声音文件、标识符和描述\nconst PAD =[\n  {padKey: 81, padSrc: soundClip, padText: \"Q\", padDescribe: \"QClip\"}, \n  {padKey: 87, padSrc: soundClip, padText: \"W\", padDescribe: \"WClip\"}, \n  {padKey: 69, padSrc: soundClip, padText: \"E\", padDescribe: \"EClip\"}, \n  {padKey: 65, padSrc: soundClip, padText: \"A\", padDescribe: \"AClip\"}, \n  {padKey: 83, padSrc: soundClip, padText: \"S\", padDescribe: \"SClip\"}, \n  {padKey: 68, padSrc: soundClip, padText: \"D\", padDescribe: \"DClip\"}, \n  {padKey: 90, padSrc: soundClip, padText: \"Z\", padDescribe: \"ZClip\"}, \n  {padKey: 88, padSrc: soundClip, padText: \"X\", padDescribe: \"XClip\"}, \n  {padKey: 67, padSrc: soundClip, padText: \"C\", padDescribe: \"CClip\"}\n];\n\n//单个案件的组件模板\nclass SingleBtn extends React.Component {\n  constructor(props){\n    super(props);\n    this.drumPadHandle = this.drumPadHandle.bind(this);\n    this.pressKey = this.pressKey.bind(this);\n  }\n  \n  drumPadHandle() {\n    //先检查电源开关\n    if (this.props.powerState === \"on\") {\n      //电源打开的情况下，触发该函数时，引用并播放对应的音频\n      const sound = document.getElementById(this.props.padText);\n      //设置播放的音量大小\n      sound.volume = this.props.volume;\n      sound.currentTime = 0;\n      sound.play();\n      //console.log(sound);\n      //console.log(event.target.parentNode.firstChild);\n      //调用自定义函数在显示屏上显示按下的按钮\n      this.props.setDisplay(this.props.padText);\n    }\n  }\n  //使用键盘时触发函数\n  pressKey(event) {\n    if (this.props.powerState === \"on\") {\n      if (event.key === this.props.padText) {\n        this.drumPadHandle();\n      }\n    }\n  }\n  //监听键盘按下事件\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.pressKey);\n  }\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.pressKey);\n  }\n\n  render() {\n    return (\n      <div id={this.props.padDescribe} className={SINGLEBTN_LAYOUT} onClick={this.drumPadHandle}>\n        <audio id={this.props.padText} className=\"clip\" src={this.props.padSrc} >\n        </audio>\n        <button className=\"play btn btn-default\">{this.props.padText}</button>\n      </div>\n    );\n  }\n}\n\n//由单个按键组合成的键盘组件\nclass DrumPad extends React.Component {\n/*   constructor(props){\n    super(props);\n  } */\n\n  render() {\n    return (\n      <div id=\"pad-panel\" className={PAD_LAYOUT}>\n        <p>Drum Pad</p>\n        <SingleBtn powerState={this.props.powerState} volume={this.props.volume} setDisplay={this.props.setDisplay} padSrc={this.props.pad[0].padSrc} padText={this.props.pad[0].padText} padDescribe={this.props.pad[0].padDescribe} />\n        <SingleBtn powerState={this.props.powerState} volume={this.props.volume} setDisplay={this.props.setDisplay} padSrc={this.props.pad[1].padSrc} padText={this.props.pad[1].padText} padDescribe={this.props.pad[1].padDescribe} />\n        <SingleBtn powerState={this.props.powerState} volume={this.props.volume} setDisplay={this.props.setDisplay} padSrc={this.props.pad[2].padSrc} padText={this.props.pad[2].padText} padDescribe={this.props.pad[2].padDescribe} />\n        <SingleBtn powerState={this.props.powerState} volume={this.props.volume} setDisplay={this.props.setDisplay} padSrc={this.props.pad[3].padSrc} padText={this.props.pad[3].padText} padDescribe={this.props.pad[3].padDescribe} />\n        <SingleBtn powerState={this.props.powerState} volume={this.props.volume} setDisplay={this.props.setDisplay} padSrc={this.props.pad[4].padSrc} padText={this.props.pad[4].padText} padDescribe={this.props.pad[4].padDescribe} />\n        <SingleBtn powerState={this.props.powerState} volume={this.props.volume} setDisplay={this.props.setDisplay} padSrc={this.props.pad[5].padSrc} padText={this.props.pad[5].padText} padDescribe={this.props.pad[5].padDescribe} />\n        <SingleBtn powerState={this.props.powerState} volume={this.props.volume} setDisplay={this.props.setDisplay} padSrc={this.props.pad[6].padSrc} padText={this.props.pad[6].padText} padDescribe={this.props.pad[6].padDescribe} />\n        <SingleBtn powerState={this.props.powerState} volume={this.props.volume} setDisplay={this.props.setDisplay} padSrc={this.props.pad[7].padSrc} padText={this.props.pad[7].padText} padDescribe={this.props.pad[7].padDescribe} />\n        <SingleBtn powerState={this.props.powerState} volume={this.props.volume} setDisplay={this.props.setDisplay} padSrc={this.props.pad[8].padSrc} padText={this.props.pad[8].padText} padDescribe={this.props.pad[8].padDescribe} />\n      </div>\n    );\n  }\n}\n//电源开关\nclass PowerBtn extends React.Component {\n  render() {\n    return (\n      <div className={POWER_LAYOUT}>\n        <p className={POWER_LOGO}>power</p>\n        <div id=\"powerBtn-wrapper\" className={POWER_BTN}>\n          <div id=\"power-button\" onClick={this.props.btn}></div>\n        </div>\n      </div>\n    );\n  }\n}\n//音量开关\nclass VolumeControl extends React.Component {\n/*   constructor(props){\n    super(props);\n  } */\n\n  render() {\n    return (\n      <div id=\"volume-bar\" className={VOLUME_LAYOUT} onClick={this.props.handleChange}>\n        <div id=\"volume-control\"></div>\n      </div>\n    );\n  }\n}\n//显示屏\nclass Display extends React.Component {\n/*   constructor(props) {\n    super(props);\n  } */\n\n  render() {\n    return (\n      <div className={DISPLAY_LAYOUT}>\n        <p id=\"display\">{this.props.text}</p>\n      </div>\n    );\n  }\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      powerState: \"on\",\n      volumeSet: 0,\n      show: \"\",\n      pad: PAD\n    };\n    this.volumeChange = this.volumeChange.bind(this);\n    this.powerControl = this.powerControl.bind(this);\n    this.setDisplay =this.setDisplay.bind(this);\n  } \n  //处理电源开关\n  powerControl(event) {\n    var amountProp = event.target.parentNode.getBoundingClientRect();\n    var length = amountProp.right - amountProp.left;\n    if (this.state.powerState === \"on\"){\n      this.setState({\n        powerState: \"off\",\n        show: \"\"\n      });\n      event.target.style.left = 0.5 * length + \"px\";\n    }else {\n      this.setState({\n        powerState: \"on\"\n      });\n      event.target.style.left = 0;\n    }\n  }\n  //处理音量调整\n  volumeChange(event) {\n    if (this.state.powerState === \"on\") {\n      //获取对应元素的上下左右边的XY值\n      var amountVolume = event.target.getBoundingClientRect();\n      //计算音量条上鼠标点击的位置坐标所占长度的百分比\n      var volume = (event.clientX - amountVolume.left) / (amountVolume.right - amountVolume.left);\n      //使浮标的位置设置为用户点击的位置\n      event.target.firstChild.style.left = event.clientX - amountVolume.left + \"px\";\n      this.setState({\n        volumeSet: volume\n      });\n    }\n  }\n\n  setDisplay(text) {\n    this.setState({\n      show: text\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"row\">\n        <div id=\"drum-machine\" className={APP_LAYOUT}>\n          <h1>Drum Machine</h1>\n          <div id=\"drum-control-wrapper\" className=\"row\">\n            <DrumPad setDisplay={this.setDisplay} pad={this.state.pad} powerState={this.state.powerState} volume={this.state.volumeSet} />\n            <div id=\"control-panel\" className={CONTROL_LAYOUT}>\n              <PowerBtn btn={this.powerControl}/>\n              <VolumeControl handleChange={this.volumeChange} />\n              <Display text={this.state.show}/>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}